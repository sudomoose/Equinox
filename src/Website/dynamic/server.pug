extends layout.pug

block content
    .jumbotron
        .container
            if guild.icon
                .row
                    .col-lg-2.col-md-2.col-sm-2
                        img.float-left(src='https://cdn.discordapp.com/icons/' + guild.id + '/' + guild.icon + '?size=256' style='width: inherit;')
                    .col-lg-10.col-md-10.col-sm-10(style='display: inline-block')
                        h1.title #{guild.name}
                        p.subtitle #{guild.memberCount} members
            else
                h1.title #{guild.name}
                p.subtitle #{guild.memberCount} members
    .container.container-margin
        form(method='post')
            h2.title Auto-Snipe
            p.subtitle Automatically repost messages when they are deleted.
            .btn-group.btn-group-toggle(data-toggle='buttons')
                label(class='btn btn-secondary' + (settings && settings.autoSnipe ? ' active' : ''))
                    input#enabled(type='radio' name='autoSnipe' autocomplete='off' value='true' checked=(settings && settings.autoSnipe))
                    | Enabled
                label(class='btn btn-secondary' + (!settings || !settings.autoSnipe ? ' active' : ''))
                    input#disabled(type='radio' name='autoSnipe' autocomplete='off' value='false' checked=(!settings || !settings.autoSnipe))
                    | Disabled
            hr
            h2.title Join Messages
            p.subtitle Send messages to a channel with a custom message when users join the server.
            div(style='margin-left: 50px; margin-top: 50px;')
                h3.title Enabled
                .btn-group.btn-group-toggle(data-toggle='buttons')
                    label(class='btn btn-secondary' + (settings && settings.joinMessages.enabled ? ' active' : ''))
                        input#enabled(type='radio' name='joinMessages.enabled' autocomplete='off' value='true' checked=(settings && settings.joinMessages.enabled))
                        | Enabled
                    label(class='btn btn-secondary' + (!settings || !settings.joinMessages.enabled ? ' active' : ''))
                        input#disabled(type='radio' name='joinMessages.enabled' autocomplete='off' value='false' checked=(!settings || !settings.joinMessages.enabled))
                        | Disabled
                br
                br
                br
                h3.title Channel
                select.form-control(name='joinMessages.channelID')
                    for channel in guild.channels.filter((channel) => channel.type === 0 && !channel.parentID).sort((a, b) => { if (a.position > b.position) return 1; if (b.position > a.position) return -1; return 0; })
                        option(value=channel.id selected=(settings && settings.joinMessages.channelID === channel.id)) ##{channel.name}
                    for category in guild.channels.filter((channel) => channel.type === 4 && channel.channels.filter((channel) => channel.type === 2).length !== channel.channels.size).sort((a, b) => { if (a.position > b.position) return 1; if (b.position > a.position) return -1; return 0; })
                        optgroup(label=category.name)
                            for channel in guild.channels.filter((channel) => channel.parentID === category.id && channel.type === 0).sort((a, b) => { if (a.position > b.position) return 1; if (b.position > a.position) return -1; return 0; })
                                option(value=channel.id selected=(settings && settings.joinMessages.channelID === channel.id)) ##{channel.name}
                br
                br
                br
                h3.title Message
                p.subtitle This input allows 
                    a(href='/tags' target='_blank') tags
                    |   which are used as placeholders for dynamic content.
                textarea.form-control(name='joinMessages.message') #{settings && settings.joinMessages.message}
            hr
            h2.title Leave Messages
            p.subtitle Send messages to a channel with a custom message when users leave the server.
            div(style='margin-left: 50px; margin-top: 50px;')
                h3.title Enabled
                .btn-group.btn-group-toggle(data-toggle='buttons')
                    label(class='btn btn-secondary' + (settings && settings.leaveMessages.enabled ? ' active' : ''))
                        input#enabled(type='radio' name='leaveMessages.enabled' autocomplete='off' value='true' checked=(settings && settings.leaveMessages.enabled))
                        | Enabled
                    label(class='btn btn-secondary' + (!settings || !settings.leaveMessages.enabled ? ' active' : ''))
                        input#disabled(type='radio' name='leaveMessages.enabled' autocomplete='off' value='false' checked=(!settings || !settings.leaveMessages.enabled))
                        | Disabled
                br
                br
                br
                h3.title Channel
                select.form-control(name='leaveMessages.channelID')
                    for channel in guild.channels.filter((channel) => channel.type === 0 && !channel.parentID).sort((a, b) => { if (a.position > b.position) return 1; if (b.position > a.position) return -1; return 0; })
                        option(value=channel.id selected=(settings && settings.leaveMessages.channelID === channel.id)) ##{channel.name}
                    for category in guild.channels.filter((channel) => channel.type === 4 && channel.channels.filter((channel) => channel.type === 2).length !== channel.channels.size).sort((a, b) => { if (a.position > b.position) return 1; if (b.position > a.position) return -1; return 0; })
                        optgroup(label=category.name)
                            for channel in guild.channels.filter((channel) => channel.parentID === category.id && channel.type === 0).sort((a, b) => { if (a.position > b.position) return 1; if (b.position > a.position) return -1; return 0; })
                                option(value=channel.id selected=(settings && settings.leaveMessages.channelID === channel.id)) ##{channel.name}
                br
                br
                br
                h3.title Message
                p.subtitle This input allows 
                    a(href='/tags' target='_blank') tags
                    |   which are used as placeholders for dynamic content.
                textarea.form-control(name='leaveMessages.message') #{settings && settings.leaveMessages.message}
            br
            br
            br
            button.btn.btn-primary(type='submit') Save Changes